{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/donation-create/donation-create.component.ts","webpack:///src/app/donation-create/donation-create.component.html","webpack:///src/app/donation-management/donation-management.component.ts","webpack:///src/app/donation-management/donation-management.component.html","webpack:///src/app/donation.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/order-detail/order-detail.component.ts","webpack:///src/app/order-detail/order-detail.component.html","webpack:///src/app/restapi.service.ts","webpack:///src/app/user-create/user-create.component.ts","webpack:///src/app/user-create/user-create.component.html","webpack:///src/app/user-management/user-management.component.ts","webpack:///src/app/user-management/user-management.component.html","webpack:///src/app/user-update/user-update.component.ts","webpack:///src/app/user-update/user-update.component.html","webpack:///src/app/user-view/user-view.component.ts","webpack:///src/app/user-view/user-view.component.html","webpack:///src/app/user.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DonationCreateComponent","restService","router","charity","getField","donation","createDonation","subscribe","data","console","log","error","donorCharity","type","donorName","name","donorDate","date","donorAmount","amount","goToOrderDetails","navigate","saveDonation","onSubmit","DonationManagementComponent","restApiService","getDonations","getDonationsList","donations","Donation","LoginComponent","service","resp","login","username","password","doLogin","OrderDetailComponent","goToUserView","RestApiService","httpClient","donationUrl","userUrl","headers","Authorization","btoa","get","responseType","post","put","user","providedIn","UserCreateComponent","restapi","createUser","goToUserManagement","saveUser","UserManagementComponent","getUsers","getUserList","users","deleteUser","onClickAddUser","UserUpdateComponent","route","snapshot","params","getUserById","updateUser","goToUserList","UserViewComponent","charities","value","fieldName","navigateByUrl","User","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DonationCreateComponent } from './donation-create/donation-create.component';\nimport { DonationManagementComponent } from './donation-management/donation-management.component';\nimport { UserViewComponent } from './user-view/user-view.component';\nimport { OrderDetailComponent } from './order-detail/order-detail.component';\nimport { UserManagementComponent } from './user-management/user-management.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nimport { UserUpdateComponent } from './user-update/user-update.component';\n\nconst routes: Routes = [\n  {path:\"\",redirectTo:\"home\",pathMatch:\"full\"},\n  {path:\"user-view\",component:UserViewComponent},\n  {path:\"user-create\",component:UserCreateComponent},\n  {path:\"user-management\",component:UserManagementComponent},\n  {path:\"user-update/:id\",component:UserUpdateComponent},\n  {path:\"login\",component:LoginComponent},\n  {path:\"donation\",component:DonationCreateComponent},\n  {path:\"donation-management\",component:DonationManagementComponent},\n  {path:\"order-detail\",component:OrderDetailComponent}\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'NGO Donation';\n}\n","<div class=\"wrapper\">\n    <!-- Sidebar -->\n    <nav id=\"sidebar\">\n        <a routerLink=\"user-management\" routerLinkActive=\"active\" class=\"nav-link\"> User Management</a>\n        <a routerLink=\"donation-management\" routerLinkActive=\"active\" class=\"nav-link\"> Donation Management</a>\n        <a routerLink=\"user-view\" routerLinkActive=\"active\" class=\"nav-link\"> User View</a>\n    </nav>\n\n    <!-- Page Content -->\n    <div id=\"content\" >\n        <router-outlet></router-outlet>   \n    </div>\n\n</div>  \n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RestApiService } from './restapi.service';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { DonationManagementComponent } from './donation-management/donation-management.component';\nimport { DonationCreateComponent } from './donation-create/donation-create.component';\nimport { UserViewComponent } from './user-view/user-view.component';\nimport { OrderDetailComponent } from './order-detail/order-detail.component';\nimport { UserManagementComponent } from './user-management/user-management.component';\nimport { UserCreateComponent } from './user-create/user-create.component';\nimport { UserUpdateComponent } from './user-update/user-update.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DonationManagementComponent,\n    DonationCreateComponent,\n    UserViewComponent,\n    OrderDetailComponent,\n    UserManagementComponent,\n    UserCreateComponent,\n    UserUpdateComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n\n  ],\n  providers: [RestApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Donation } from '../donation';\nimport { RestApiService } from '../restapi.service';\nimport { UserViewComponent } from '../user-view/user-view.component';\n\n\n@Component({\n  selector: 'app-create-donation',\n  templateUrl: './donation-create.component.html',\n  styleUrls: ['./donation-create.component.css']\n})\nexport class DonationCreateComponent implements OnInit {\n  \n  charity:string = UserViewComponent.getField();\n  \n  static donorCharity: string; \n  static donorName: string;\n  static donorDate: Date;\n  static donorAmount: number;\n\n\n  donation: Donation = new Donation();\n\n  constructor(private restService: RestApiService, private router:Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  saveDonation(){\n    this.restService.createDonation(this.donation).subscribe(data =>{\n      console.log(data)\n    },\n    error => console.log(error))\n\n    DonationCreateComponent.donorCharity = this.donation.type;\n    DonationCreateComponent.donorName = this.donation.name;\n    DonationCreateComponent.donorDate = this.donation.date;\n    DonationCreateComponent.donorAmount = this.donation.amount;\n    \n    this.goToOrderDetails();\n\n  }\n\n  goToOrderDetails(){\n    this.router.navigate(['order-detail'])\n    \n  }\n\n  onSubmit() {\n    console.log(this.donation + \"SUBMIT\")\n    this.donation.type = this.charity;\n    this.saveDonation();\n    \n  }\n\n   getCharity(): string{\n   return DonationCreateComponent.donorCharity; \n  }\n  \n\n}\n","<h1> Donation Details Page </h1>\n\n\n<form (ngSubmit) = \"onSubmit()\">\n\n<div>\n    <label>Charity/ Donation Type</label>\n    <input type=\"text\" [ngModel]=\"charity\" id=\"type\" \n    name=\"charity\">\n</div>\n\n<div>\n    <label>Full Name</label>\n    <input type=\"text\" id=\"name\" \n    [(ngModel)] = \"donation.name\" name=\"name\">\n</div>\n\n<div>\n    <label>Date</label>\n    <input type=\"date\" id=\"date\" \n    [(ngModel)] = \"donation.date\" name=\"date\">\n</div>\n\n<div>\n    <label>Amount</label>\n    <input type=\"text\" id=\"amount\" \n    [(ngModel)] = \"donation.amount\" name=\"amount\">\n</div>\n\n<button class=\"btn btn-success\" type = \"submit\"> Continue </button>\n</form> \n","import { Component, OnInit } from '@angular/core';\nimport { Donation } from '../donation';\nimport { RestApiService } from '../restapi.service';\n\n@Component({\n  selector: 'donation-management',\n  templateUrl: './donation-management.component.html',\n  styleUrls: ['./donation-management.component.css']\n})\nexport class DonationManagementComponent implements OnInit {\n\n  donations: Donation[];\n\n  constructor(private restApiService:RestApiService) { }\n\n  ngOnInit(): void {\n    this.getDonations();\n      \n  }\n\n  getDonations(){\n    this.restApiService.getDonationsList().subscribe(data => {\n      this.donations = data;\n    })\n  }\n\n\n}\n","<h2> Donation Management </h2>\n<table class = \"table table-striped\">\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Date</th>\n            <th>Amount</th>\n            <th>Donation Type</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor = \"let donation of donations\">\n            <td>{{donation.name}}</td>\n            <td>{{donation.date | date: 'MM/dd/yyyy'}}</td>\n            <td>{{donation.amount | currency:'USD': 'symbol' :'1.2-2'}}</td>\n            <td>{{donation.type}}</td>\n        </tr>\n\n    </tbody>\n</table>","export class Donation {\n\n    id: number;\n    name: string;\n    date: Date;\n    amount: number;\n    type: string;\n\n}","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from '../restapi.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username:string;\n  password:string;\n  message:any;\n\n  constructor(private service: RestApiService) { }\n\n  ngOnInit(): void {\n  }\n\n  doLogin(){\n    let resp =this.service.login(this.username,this.password)\n    resp.subscribe(data=>{\n      console.log(data);\n    })\n  }\n\n}\n","<div class=\"background-wrap\">\n    <div class=\"background\"></div>\n  </div>\n \n  <form id=\"accesspanel\" action=\"\">\n    <h1 id=\"litheader\">NGO Donation Login</h1>\n    <div class=\"inset\">\n      <p>\n        <input type=\"text\" name=\"username\" [(ngModel)]=\"username\" id=\"email\" placeholder=\"username\">\n      </p>\n      <p>\n        <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" id=\"password\" placeholder=\"password\">\n      </p>\n    </div>\n    <p class=\"p-container\">\n      <input type=\"submit\" name=\"Login\" id=\"go\" value=\"Login\" (click)=\"doLogin()\">\n    </p>\n  </form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DonationCreateComponent } from '../donation-create/donation-create.component';\n\n@Component({\n  selector: 'order-detail',\n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.css']\n})\nexport class OrderDetailComponent implements OnInit {\n\n\n  charity: string = DonationCreateComponent.donorCharity;\n  name: string = DonationCreateComponent.donorName;\n  date: Date = DonationCreateComponent.donorDate;\n  amount: number = DonationCreateComponent.donorAmount;\n\n  constructor(private router: Router) { }\n\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){ \n    this.goToUserView();\n  }\n\n  goToUserView(){\n    this.router.navigate(['user-view'])\n    \n  }\n\n}\n","<h1> Donation Confirmation Details </h1>\n<form (ngSubmit) = \"onSubmit()\">\n    <table class=\"table table-striped\" >\n        <tbody>\n            <tr>\n                <h3>Charity: </h3>\n                <div class=\"col-sm\">\n                    <div class=\"text-left\">{{charity}}</div>\n                </div>\n            </tr>\n            <tr>\n                <h3>Full Name:</h3>\n                <div class=\"col-sm\">\n                    <div class=\"text-left\">{{name}}</div>\n                </div>\n            </tr>\n            <tr>\n                <h3>Date: </h3>\n                <div class=\"col-sm\">\n                    <div class=\"text-left\">{{date}}</div>\n                </div>\n            </tr>\n            <tr class=\"p-3 mb-2 bg-warning text-dark\">\n                <h3>Total: </h3>\n                <div class=\"col-sm\">\n                    <h3 class=\"text-left\">{{amount|currency:'USD': 'symbol' :'1.2-2'}}</h3>\n                </div>\n            </tr>\n    \n        </tbody>\n    </table>\n    <button class=\"btn btn-success\" type = \"submit\"> Done </button>\n</form>\n\n\n\n\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Donation } from './donation';\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestApiService {\n\n  private donationUrl = \"http://localhost:8080/api/donations\"\n  private userUrl = \"http://localhost:8080/api/users\"\n\n  constructor(private httpClient:HttpClient) { }\n\n  public login(username: string, password:string){\n    const headers=new HttpHeaders({Authorization: 'Basic'+btoa(username+\":\"+password) })\n    return this.httpClient.get(\"http://localhost:8080/\",{headers,responseType:'test'as'json'})\n  }\n\n  getDonationsList(): Observable<Donation[]>{\n    return this.httpClient.get<Donation[]>(`${this.donationUrl}`);\n  }\n\n  createDonation(donation: Donation): Observable<Object>{\n    return this.httpClient.post(`${this.donationUrl}`, donation);\n  }\n\n  getDonationById(id: number): Observable<Donation>{\n    return this.httpClient.get<Donation>(`${this.donationUrl}/${id}`);\n  }\n\n  updateDonation(id: number, donation: Donation): Observable<Object>{\n    return this.httpClient.put(`${this.donationUrl}/${id}`, donation);\n  }\n\n  deleteDonation(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.donationUrl}/${id}`);\n  }\n\n  getUserList(): Observable<User[]>{\n    return this.httpClient.get<User[]>(`${this.userUrl}`);\n  }\n\n  createUser(user: User): Observable<Object>{\n    return this.httpClient.post(`${this.userUrl}`, user);\n  }\n\n  getUserById(id: number): Observable<User>{\n    return this.httpClient.get<User>(`${this.userUrl}/${id}`);\n  }\n\n  updateUser(id: number, user: User): Observable<Object>{\n    return this.httpClient.put(`${this.userUrl}/${id}`, user);\n  }\n\n  deleteUser(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.userUrl}/${id}`);\n  }\n \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RestApiService } from '../restapi.service';\nimport { User } from '../user';\n\n\n@Component({\n  selector: 'user-create',\n  templateUrl: './user-create.component.html',\n  styleUrls: ['./user-create.component.css']\n})\nexport class UserCreateComponent implements OnInit {\n\n\n  user: User = new User();\n\n  constructor(private restapi: RestApiService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  saveUser(){\n    this.restapi.createUser(this.user).subscribe(data => {\n      console.log(data)\n    })\n    this.goToUserManagement();\n  }\n\n  goToUserManagement(){\n    this.router.navigate([\"user-management\"])\n  }\n\n  onSubmit(){\n    console.log(this.user);\n    this.saveUser();\n  }\n\n\n}\n","<h1> Add New User Page </h1>\n\n\n<form (ngSubmit) = \"onSubmit()\">\n\n<div>\n    <label>First Name</label>\n    <input type=\"text\" id=\"firstName\" \n    [(ngModel)] = \"user.firstName\" name=\"firstName\">\n</div>\n\n<div>\n    <label>Last Name</label>\n    <input type=\"text\" id=\"lastName\" \n    [(ngModel)] = \"user.lastName\" name=\"lastName\">\n</div>\n\n<div>\n    <label>Email Address:</label>\n    <input type=\"text\" id=\"email\" \n    [(ngModel)] = \"user.email\" name=\"email\">\n</div>\n<div>\n    <label>Role:</label>\n    <div class=\"form-control\">\n        <label class=\"radio-inline\">\n         <input type=\"radio\" value=\"ROLE_ADMIN\" name=\"role\" [(ngModel)]=\"user.role\">\n            Admin\n        </label>\n        <label class=\"radio-inline\">\n            <input type=\"radio\" value=\"ROLE_USER\" name=\"role\" [(ngModel)]=\"user.role\">\n            User\n        </label>\n    </div>\n</div>\n\n<p></p>\n\n\n<button class=\"btn btn-success\" type = \"submit\"> Submit </button>\n</form> ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RestApiService } from '../restapi.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n\n  users: User[];\n\n  constructor(private restApiService:RestApiService, private router: Router) {\n\n   }\n\n  ngOnInit(): void {\n    this.getUsers();\n  }\n\n  getUsers(){\n    this.restApiService.getUserList().subscribe(data => {\n      this.users = data;\n    })\n  }\n\n  onClickAddUser(){\n    this.router.navigate(['user-create'])\n  }\n\n  onClickEditUser(id: number){\n    this.router.navigate(['user-update', id])\n  }\n\n  onClickDeleteUser(id: number){\n    this.restApiService.deleteUser(id).subscribe(data => {\n      console.log(data)\n      this.getUsers() ;\n    })\n  }\n\n}\n","\n\n<table>\n    <thead>\n        <td><h2> User Management </h2></td>\n    </thead>\n</table>\n\n<div class=\"text-right\">\n    <h3><button (click)=\"onClickAddUser()\" title=\"\">Add User</button> </h3>\n</div>\n\n<table class = \"table table-striped\">\n    <thead>\n        <tr>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email</th>\n            <th>Role</th>\n            <th></th>\n            <th></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor = \"let user of users\">\n            <td>{{user.firstName}}</td>\n            <td>{{user.lastName}}</td>\n            <td>{{user.email}}</td>\n            <td>{{user.role}}</td>\n            <td><button type=\"button\" class=\"btn btn-primary\" (click)=\"onClickEditUser(user.id)\">Edit</button></td>\n            <td><button type=\"button\" class=\"btn btn-primary\" (click)=\"onClickDeleteUser(user.id)\">Delete</button></td>\n\n        </tr>\n\n    </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RestApiService } from '../restapi.service';\nimport { User } from '../user';\n\n\n@Component({\n  selector: 'user-update',\n  templateUrl: './user-update.component.html',\n  styleUrls: ['./user-update.component.css']\n})\nexport class UserUpdateComponent implements OnInit {\n\n  id: number;\n  user: User = new User();\n  constructor(private restapi: RestApiService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.id =this.route.snapshot.params['id'];\n    this.restapi.getUserById(this.id).subscribe(data => {\n      this.user = data;\n    }, error => console.log(error)\n    );\n  }\n\n  onSubmit() {\n    this.restapi.updateUser(this.id, this.user).subscribe( data => {\n      this.goToUserList();\n    }, error => console.log(error)\n    ); \n  }\n  \n  goToUserList(){\n    this.router.navigate(['user-management']);\n  }\n}\n","<h1> Update User Page </h1>\n\n\n<form (ngSubmit) = \"onSubmit()\">\n\n<div>\n    <label>First Name</label>\n    <input type=\"text\" id=\"firstName\" \n    [(ngModel)] = \"user.firstName\" name=\"firstName\">\n</div>\n\n<div>\n    <label>Last Name</label>\n    <input type=\"text\" id=\"lastName\" \n    [(ngModel)] = \"user.lastName\" name=\"lastName\">\n</div>\n\n<div>\n    <label>Email Address:</label>\n    <input type=\"text\" id=\"email\" \n    [(ngModel)] = \"user.email\" name=\"email\">\n</div>\n<div>\n    <label>Role:</label>\n    <div class=\"form-control\">\n        <label class=\"radio-inline\">\n         <input type=\"radio\" value=\"ROLE_ADMIN\" name=\"role\" [(ngModel)]=\"user.role\">\n            Admin\n        </label>\n        <label class=\"radio-inline\">\n            <input type=\"radio\" value=\"ROLE_USER\" name=\"role\" [(ngModel)]=\"user.role\">\n            User\n        </label>\n    </div>\n</div>\n\n<p></p>\n\n\n<button class=\"btn btn-success\" type = \"submit\"> Submit </button>\n</form> ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DonationCreateComponent } from '../donation-create/donation-create.component';\n\n@Component({\n  selector: 'user-view',\n  templateUrl: './user-view.component.html',\n  styleUrls: ['./user-view.component.css']\n})\nexport class UserViewComponent implements OnInit {\n  \n  charities: any[] = [\n    {\"id\": 1, \"name\": \"Bake Sale\"},\n    {\"id\": 2, \"name\": \"Dog Rescue\"},\n    {\"id\": 3, \"name\": \"Fundraiser\"},\n    {\"id\": 4, \"name\": \"Marathon\"}];\n  \n  static fieldName: string;\n\n  constructor(private router: Router) { \n  \n  } \n\n  ngOnInit(): void {\n  }\n\n  onClick(value) {\n    UserViewComponent.fieldName = value;\n    this.router.navigateByUrl(\"donation\");\n    console.log(UserViewComponent.fieldName + \"FieldName\"); \n  }\n\n  static getField(): string {\n    return this.fieldName;\n  }\n\n\n}\n","<h1> Make a Donation </h1>\n \n<h2 class =\"text-center\">Click on any donation type to continue</h2>\n\n<div class=horizontal>\n    <h3 *ngFor = 'let charity of charities'>     \n        <button #button (click)=\"onClick(button.title)\" title={{charity.name}}>{{charity.name}}</button> \n    </h3>\n</div>\n\n\n\n\n\n","export class User {\n\n    id: number;\n    firstName: string;\n    lastName: string;\n    email: string;\n    role: string;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}